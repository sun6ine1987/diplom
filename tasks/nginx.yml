---
- hosts: web
  become: yes
  vars:
    server_name: "{{ ansible_default_ipv4.address }}"
  vars_files:
    â€“ "../vars/elasticsearch.yml"
    - "../vars/kibana.yml"
  tasks:
  - name: Remove apt lock file
    file:
      state: absent
      path: "{{ item }}"
    loop: [ '/var/lib/dpkg/lock-frontend', '/var/lib/dpkg/lock']

  - name: Install nginx
    apt:
      name: nginx
      state: latest
      update_cache: yes

  - name: Copy website files
    copy:
      src: ../files/nginx/index.html
      dest: /var/www/html
      mode: preserve
    register: nginx_conf

  - name: Apply nginx template
    template:
      src: ../files/nginx/nginx.conf.j2
      dest: /etc/nginx/sites-available/default

  - name: Enable new site
    file:
      src: /etc/nginx/sites-available/default
      dest: /etc/nginx/sites-enabled/default
      state: link

  - name: Allow all access to tcp port 80
    ufw:
      rule: allow
      port: '80'
      proto: tcp

  - name: Start nginx
    service:
      name: nginx
      state: restarted
      enabled: yes
      daemon_reload: yes

  - name: Download and unpack node_exporter
    unarchive:
      src: https://github.com/prometheus/node_exporter/releases/download/v1.4.0/node_exporter-1.4.0.linux-amd64.tar.gz
      dest: /usr/local/bin/
      remote_src: yes
      extra_opts: [--strip-components=1]
      owner: root
      group: root

  - name: Create group node_exporter to run service
    group:
      name: node_exporter
      state: present

  - name: Create user node_exporter to run service
    user:
      name: node_exporter
      group: node_exporter
      state: present

  - name: Copy file node_exporter to run service
    template:
      src: ../files/nginx/node_exporter.service.j2
      dest: /lib/systemd/system/node_exporter.service
      mode: preserve

  - name: Start node_exporter service
    service:
      name: node_exporter
      state: started
      enabled: yes
      daemon_reload: yes

  - name: Install nginxlog_exporter
    apt:
      deb: https://github.com/martin-helmich/prometheus-nginxlog-exporter/releases/download/v1.10.0/prometheus-nginxlog-exporter_1.10.0_linux_amd64.deb
      state: present

  - name: Change file ownership and group
    file:
      path: /var/log/nginx/access.log
      owner: root
      group: root

  - name: Copy conf file nginxlog_exporter
    template:
      src: ../files/nginx/prometheus-nginxlog-exporter.hcl.j2
      dest: /etc/prometheus-nginxlog-exporter.hcl
      mode: preserve

  - name: Enable nginxlog_exporter
    service:
      name: prometheus-nginxlog-exporter
      state: started
      enabled: yes

  - name: Remove apt lock file
    file:
      state: absent
      path: "{{ item }}"
    loop: [ '/var/lib/dpkg/lock-frontend', '/var/lib/dpkg/lock']

  - name: Install required system packages
    apt:
      name: "{{ item }}"
      state: latest
      update_cache: yes
    loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common' ]

  - name: Add Docker GPG apt key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add Docker Repository
    apt_repository:
      repo: deb https://download.docker.com/linux/ubuntu focal stable
      state: present

  - name: Update apt and install docker-ce, docker-ce-cli, containerd.io
    apt:
      name: "{{ item }}"
      state: latest
      update_cache: yes
    loop: [ 'docker-ce', 'docker-ce-cli', 'containerd.io' ]

  - name: Install Python
    apt:
      name: "{{ item }}"
      state: latest
      update_cache: yes
    loop: [ 'python3-pip', 'python3-setuptools' ]

  - name: Install Docker Module for Python
    pip:
      name: docker

  - name: Install or upgrade docker-compose
    get_url:
      url : https://github.com/docker/compose/releases/download/v2.12.2/docker-compose-Linux-x86_64
      dest: /usr/local/bin/docker-compose
      mode: "a+x"
      force: yes

  - name: Copy docker-compose.yml
    copy:
      src: ../files/filebeat/docker-compose.yml
      dest: ~/docker-compose.yml
      mode: preserve

  - name: Copy conf file
    template:
      src: ../files/filebeat/filebeat.yml.j2
      dest: ~/filebeat.yml
